#!/usr/bin/env bash

set -eu

sgr0="$(tput sgr0)"
af=()
ab=()

# get by \e[30-47m \e[90-97m
# set by \e]P{0-f}rrggbb
printf 'ansi 16 foreground\n'
for ((c = 0; c < 8; c++)); do
    af[c]="$(tput setaf "$c")"
    printf "%sxxxxxxxx  %s" "${af[c]}" "$sgr0"
done
printf "\n"

for ((c = 8; c < 16; c++)); do
    af[c]="$(tput setaf "$c")"
    printf "%sxxxxxxxx  %s" "${af[c]}" "$sgr0"
done
printf "\n"

printf 'ansi 16 background\n'
for ((c = 0; c < 8; c++)); do
    ab[c]="$(tput setab "$c")"
    printf "%s        %s  " "${ab[c]}" "$sgr0"
done
printf "\n"

for ((c = 8; c < 16; c++)); do
    ab[c]="$(tput setab "$c")"
    printf "%s        %s  " "${ab[c]}" "$sgr0"
done
printf "\n"

# color matrix
printf 'ansi 16 matrix\n'
printf "   "
printf "%-5s" {0..15}
printf "\n"
for ((r = 0; r < 16; r++)); do
    bg=${ab[r]}
    printf "%-3d" "$r"
    for (( c = 0; c < 16; c++ )); do
        printf "%s%sxxx  " "$bg" "${af[c]}"
    done
    printf "$sgr0\n"
done
printf '\n'

# get by \e[38;5;xm
# set by \e]4;x;rgb:rr/gg/bb\e\
printf 'print colors 16 to 231 for 256 colors\n'
for ((i = j = 0; c < 232; c++, i++)); do

        # print start | for every cell
        printf "|"

        # print an extra space every block, each block has 6 items
        ((i > 5 && (i = 0, ++j))) && printf " |"

        # move cursor left, erase it,  print a newline every 6 blocks
        ((j > 5 && (j = 0, 1)))   && printf "\b \n|"

        # print colored number
        printf "%s%3d%s" "$(tput setaf "$c")" "$c" "$sgr0"
done
printf "|\n\n" # the last |

printf "Greyscale 232 to 255 for 256 colors\n"
for ((; c < 256; c++)); do
    printf "|%s%3d%s" "$(tput setaf "$c")" "$c" "$sgr0"
done
printf "|\n\n"

printf 'print true color \n'
printf "\e[48;2;%d;%d;%dm " $(eval echo 0\ 0\ {0..63})
printf "%s\n" "$sgr0"
printf "\e[48;2;%d;%d;%dm " $(eval echo 0\ 0\ {64..127})
printf "%s\n" "$sgr0"
printf "\e[48;2;%d;%d;%dm " $(eval echo 0\ 0\ {128..191})
printf "%s\n" "$sgr0"
printf "\e[48;2;%d;%d;%dm " $(eval echo 0\ 0\ {192..255})
printf "%s\n" "$sgr0"
