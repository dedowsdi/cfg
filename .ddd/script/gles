#!/usr/bin/env bash

set -eu -o pipefail

show_usage()
{
    echo "
  Usage: gles <string|enum>...

  Convert opengl enum to or from string. Written for gawk.

  Options:
    -h   Show this help.
"
}

while getopts ":h" opt; do
    case $opt in
        h)
            show_usage
            exit 0
            ;;

        * )
            echo -e "\n  Option does not exist : $OPTARG\n"
            usage; exit 1
            ;;
    esac
done
shift $((OPTIND-1))

if [[ ! -f /usr/include/GL/gl.h ]]; then
    echo 'need /usr/include/GL/gl.h'
    exit 1
fi
if [[ ! -f /usr/include/GL/glext.h ]]; then
    echo 'need /usr/include/GL/glext.h'
    exit 1
fi

if [[ $# -eq 0 ]]; then
    show_usage
    exit 1
fi

gawk '
# collect <enum, <index,string>> in a
# collect <string, enum> in b
BEGIN {
    IGNORECASE=1
    while (getline < "/usr/include/GL/gl.h") {
        if ($0 ~ /^\s*#define\s+GL_\w+\s+0x[0-9A-F]{4}/) {
            a[toupper($3)][i++] = $2
            b[toupper($2)] = $3
        }
    }
    while (getline < "/usr/include/GL/glext.h") {
        if ($0 ~ /^\s*#define\s+GL_\w+\s+0x[0-9A-F]{4}/) {
            a[toupper($3)][i++] = $2
            b[toupper($2)] = $3
        }
    }

    # split record by word
    RS="[ \t\n]"
}

# enum to string
/^(0x)?[0-9A-F]{4}$/ {
    uk = toupper($0)
    if(uk in a)
    {
        for(k in a[uk])
        {
            print $0, ":", a[uk][k]
        }
    }
}

# string to enum
/^GL\w+$/{
print $0, ":", b[toupper($0)]
}
' <<<"$*"
