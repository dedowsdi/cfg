#!/bin/bash

set -eu -o pipefail

prog_name=${0##*/}
template_path=~/.mkt_template
study_path=~/study
suffix=

prog_name=${0##*/}
show_usage()
{
    echo "
  Usage: $prog_name [name | -s SUFFIX | -t TEMPLATE]

  Create test project or file under $study_path/year/month/day/.

  Options:
    -h           Show this help.

    -p           Create $study_path/year/month/day and print it.

    -t TEMPLATE  Use template from ~/.mkt_template, name new directory as TEMPLATE_N.

    -l           List templates from ~/.mkt_template.

    -s SUFFIX    Add suffix to file name.
"
}

load_template()
{
    local template=$1
    local src_dir
    src_dir="$(realpath "$template_path/$template")"
    if [[ ! -d "$src_dir" ]]; then
        1>&2 echo "$src_dir doesn't exists"
        return 1
    fi

    # use template_n style name
    local n
    n=$(find . -regextype posix-egrep -regex "^./${template}_[0-9]+" | cut -b "$((${#template}+4))"- | sort -n | tail -1)
    if [[ -z "$n" ]]; then n=0; else n=$((n+1)); fi

    # copy template
    local dest_dir=${template}_$n
    mkdir -p "${dest_dir}"

    rsync -a --exclude="build/*/*/*" --exclude="tags" --exclude="compile_commands.json" "$src_dir/" "$dest_dir"
    cd "$dest_dir" && pwd
}

list_templates()
{
    find "$template_path" -maxdepth 1 -mindepth 1 -type d -printf "%f\n" | sort
}

# goto today's directory
today_dir="$study_path/$(date +"%Y/%m/%d")"
if [[ ! -d "$today_dir" ]]; then
    mkdir -p "$today_dir"
fi
cd "$today_dir"

while getopts "ht:pls:" opt; do
    case $opt in
        h)
            show_usage
            exit 0
            ;;

        t)
            load_template "$OPTARG"
            exit $?
            ;;

        p)
            pwd
            exit 0
            ;;

        l)
            list_templates
            exit $?
            ;;

        s)
            suffix="$OPTARG"
            ;;

        * )
            echo -e "\n  Option does not exist : $OPTARG\n"
            usage; exit 1
            ;;
    esac
done
shift $((OPTIND-1))

# create new file and print it's path
fname=${1:-}
if [[ -z "$fname" ]]; then
    n=$(find . -regextype posix-egrep -regex "^./f_[0-9]+.*" | grep -oP 'f_\K\d+' | sort -n | tail -1)
    if [[ -z "$n" ]]; then n=0; else n=$((n+1)); fi
    fname="f_$n$suffix"
fi

touch "$fname"
realpath "$fname"

exit $?
