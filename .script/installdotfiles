#!/usr/bin/env bash

set -eu -o pipefail

show_usage()
{
    echo "
  Usage: ${0##*/} [-hft]

  Install dotfiles by creating symbolic links. If target exists and is not
  a link, It will be moved to .dotfiles.bak

  Options:
    -h             Show this help

    -f FROM_DIR    Dot files source directory. [default: parent dir of this script]

    -t TO_DIR Dot  files target directory. [default: home]
"
}

script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
from_dir=$(realpath "$script_dir/..")
to_dir=~

if [[ "$from_dir" == "$to_dir" ]]; then
    echo can not set both from_dir and to_dir to_dir "$from_dir"
    exit 1
fi

while getopts ":hf:t:" opt; do
    case $opt in
        h)
            show_usage
            exit 0
            ;;

        f)
            from_dir=$OPTARG
            ;;

        t)
            to_dir=$OPTARG
            ;;

        * )
            echo -e "\n  Option does not exist : $OPTARG\n"
            usage; exit 1
            ;;
    esac
done
shift $((OPTIND-1))

# create link for all files except .oh-my-zsh and .config
find "$from_dir" -mindepth 1 -maxdepth 1 -name '.*' ! -name '.git' ! -name '.oh-my-zsh' ! -name '.config' |
while read -r f; do
    if [[ "$f" =~ \.(oh-my-zsh|config|git) ]]; then
        continue
    fi

    link="$to_dir/${f##*/}"

    if [[ ! -L "$link" ]]; then
        mkdir -p "$to_dir/.dotfiles.bak"
        rsync -a "$link" "$to_dir/.dotfiles.bak" && rm -rf "$link"
        echo "$link"
    elif [[ "$(readlink "$f")" != "$f" ]] ; then
        continue
    fi

    ln -vfs "$f" "$to_dir/${f##*/}"
done

if [[ -d "$from_dir/.oh-my-zsh" ]]; then
    ln -fs "$from_dir/.oh-my-zsh/custom/themes/robbyrussell.zsh-theme" "$to_dir/.oh-my-zsh/custom/themes/robbyrussell.zsh-theme"
fi

exit 0
