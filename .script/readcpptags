#!/usr/bin/env bash
# readtags is not easy to use, this is a simple wrapper around it

set -eu -o pipefail

name=-l
kind=
search_derived=
search_base=

show_usage() {
    echo "
  Usage ${0##*/} [options] [name]

    -h          Show this help.
    -k KIND     Restrict kind.
    -d DERIVED  Search derived classes, at most 3 layers by default, can be changed by -n.
    -n NUMBER   Of layer, affect -d only.
"
}

# print in one line
search_first_bases()
{
    classname=$1

}

search_bases()
{

}

search_deriveds()
{

}


while getopts ":k:dn:" Option ; do
    case $Option in

        k)
            kind="$OPTARG"
            ;;
        d)
            search_deriveds
            exit $?
            ;;
        b)
            search_bases
            exit $?
            ;;
        *)
            echo "Unimplemented option:$Option"
            exit 1
            ;;
    esac
done
shift $((OPTIND-1))

if [[ $# -gt 0 ]]; then
    name="$1"
fi

conditions=()

if [[ -v kind ]]; then
    conditions+=('-Q' "'(eq? \"$kind\" \$kind)'")
fi

if [[ -v search_derived ]]; then
    conditions+=('-Q' "'(member \"$base\" \$inherits)'")
fi

eval readtags -e "${conditions[@]}" "$name"
