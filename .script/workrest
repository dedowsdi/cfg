#!/bin/bash

set -o errexit
set -o nounset

PROG_NAME=$0

show_usage()
{
    echo "Usage:"
    echo ""
    echo "    $PROG_NAME -[hwr] work_stp work_step_count, rest_step rest_step_count"
    echo ""
    echo "    -h show this help"
    echo ""
    echo "    -w work session name"
    echo ""
    echo "    -r rest session name"
}

if [[ -z $TMUX ]]; then
    echo "need tmux"
    exit 0
fi

work_session=work
rest_session=rest

while getopts ":hw:r:" Option ; do
    case $Option in

        h)
            show_usage
            exit 0
            ;;

        w)
            work_session="$OPTARG"
            ;;

        r )
            rest_session="$OPTARG"
            ;;

        *)
            echo "Unimplemented option:$Option"
            exit 1
            ;;
    esac
done
shift $((OPTIND-1))

tmux_wid="$(xdotool getactivewindow)"
work_step=${1:-1s}
work_total_step=${2:-6}
rest_step=${3:-1s}
rest_total_step=${4:-5}
# work_regular_style=$(tmux show-options -t work status-style)
work_regular_style='bg=green fg=black'
work_rest_style='bg=magenta fg=black'

# 0 as work, 1 as rest
stage=0

names=(work rest)
steps=("$work_step" "$rest_step")
total_steps=("$work_total_step" "$rest_total_step")
sessions=("$work_session" "$rest_session")

count=0

tmux set -t work status-style "$work_regular_style"
echo "${names[$stage]} begin, ${total_steps[stage]} * ${steps[stage]}"

while true ; do

    # update count
    sleep "${steps[$stage]}"
    count=$((count+1))
    [[ $stage -eq 0 ]] && symbol='$$' || symbol='**'
    text="$symbol  $count / ${total_steps[$stage]}  $symbol"
    tput setaf $((RANDOM % 256)) ; figlet -ktc "$text"

    # set tmux status background to red for the last 2 steps
    if [[ $((count + 1)) -eq ${total_steps[$stage]} && $stage -eq 0 ]]; then
        tmux set -t work status-style "$work_rest_style"
    fi

    if [[ $count -eq ${total_steps[$stage]} ]]; then

        if [[ $stage -eq 0 ]] ; then
            last_wid="$(xdotool getactivewindow)"
            xdotool windowactivate "$tmux_wid"
        else

            # switch back to last active window
            xdotool windowactivate "$last_wid"
        fi

        echo "${names[$stage]} done"
        count=0
        stage=$((stage^1))

        # reset tmux status style
        if [[ $stage -eq 0 ]]; then
            tmux set -t work status-style "$work_regular_style"
        fi

        tmux switch-client -t "${sessions[$stage]}"
        echo "${names[$stage]} begin, ${total_steps[stage]} * ${steps[stage]}"

    fi
done
