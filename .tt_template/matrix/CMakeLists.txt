cmake_minimum_required(VERSION 3.8)

# old policy for FindOpenGL
cmake_policy(SET CMP0072 OLD)

project(tt VERSION 0.0 LANGUAGES CXX)

set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake;${CMAKE_MODULE_PATH}")

# Require out-of-source builds
file(TO_CMAKE_PATH "${PROJECT_BINARY_DIR}/CMakeLists.txt" LOC_PATH)
if(EXISTS "${LOC_PATH}")
    message(FATAL_ERROR "You cannot build in a source directory (or any directory with a CMakeLists.txt file). Please make a build subdirectory. Feel free to remove CMakeCache.txt and CMakeFiles.")
endif()

set(DEFAULT_BUILD_TYPE "Release")
if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
  message(STATUS "Setting build type to '${DEFAULT_BUILD_TYPE}' as none was specified.")
  set(CMAKE_BUILD_TYPE "${default_build_type}" CACHE STRING "Choose the type of build." FORCE)

  # Set the possible values of build type for cmake-gui
  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release" "MinSizeRel" "RelWithDebInfo")
endif()

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# -isystem ... is used to add auto complete for c++ head in ycm
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -pthread")

find_package(gl43app REQUIRED CONFIG NO_CMAKE_SYSTEM_PACKAGE_REGISTRY)

set(SRC
    main.cpp
    )
add_custom_target(link_data COMMAND ${CMAKE_COMMAND} -E create_symlink
    ${CMAKE_CURRENT_SOURCE_DIR}/data
    ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/data)

add_executable(tt ${SRC})
target_link_libraries(tt zxd::gl43app)

add_dependencies(tt link_data)

target_compile_features(tt PUBLIC cxx_std_14)
set_target_properties(tt PROPERTIES CXX_EXTENSIONS OFF)
target_compile_options(tt PRIVATE $<$<AND:$<CONFIG:Debug>,$<CXX_COMPILER_ID:GNU>>:-pthread -gdwarf -g3>)
